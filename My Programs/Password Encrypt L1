#include <stdio.h>
#include <string.h> //need this library for strcspn

int main()
{
    char password[30];
    char encryptedPassword[30];
    char decryptedPassword[30];

    // code here to take input from the user
    printf("Enter your password: ");
    fgets(password, 30, stdin);

    // remove the newline character added by fgets
    //strcspn (string complement span) is used to find the first occurrence of any character from the second argument in the first argument.
    //By assigning 0 (null terminator, \0) to password[strcspn(password, "\n")], you replace the newline character with a null terminator 0.
    password[strcspn(password, "\n")] = 0; 

    //-------------------------------------------Encrypt The Password--------------------------------------------------------------------------------------//

    // Simple encryption: shift each character by 1
    for (int i = 0; i < strlen(password); i++) {
        encryptedPassword[i] = password[i] + 1;
    }

    //The strlen function computes the length of the string password, excluding the null terminator (\0).
    //After copying and modifying each character from password to encryptedPassword, 
    //you need to ensure that encryptedPassword is properly null-terminated to be a valid string.
    //What I'm doing here is putting the null character at the string length of "password" position
    int passwordLength = strlen(password);
    encryptedPassword[passwordLength] = '\0'; // null-terminate the string

    //-------------------------------------------Decrypt The Password--------------------------------------------------------------------------------------//    
    printf("Encrypted password: %s\n", encryptedPassword);

    // code to decrypt the password
    for (int i = 0; i < strlen(encryptedPassword); i++) {
        decryptedPassword[i] = encryptedPassword[i] - 1;
    }

    decryptedPassword[strlen(encryptedPassword)] = '\0'; // null-terminate the string

    // code to display decrypted password
    printf("Decrypted password: %s\n", decryptedPassword);

    return 0;
}